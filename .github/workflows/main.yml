# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

# trigger build when pushing, or when creating a pull request
on: [push, pull_request]

defaults:
  run:
    shell: bash
    working-directory: server
    
jobs:
  container-build:
    # run build on latest ubuntu
    runs-on: ubuntu-latest
      # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: test
          POSTGRES_USER: test123
          POSTGRES_PASSWORD: helloWorld
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
    
    steps:
    # for checking out the branch (https://github.com/actions/checkout#Push-a-commit-using-the-built-in-token)
    - uses: actions/checkout@v3
    
    # installing Node
    - name: Use Node.js 18.x
      uses: actions/setup-node@v1
      with:
        # this is regarding the matrix strategy specified above
        node-version: 18.x
        
    - name: Install dependencies
      run: npm install
      
    - name: Run Migrations, Generate Types, and Run Tests
      run: |
        echo $POSTGRES_HOST
        echo $POSTGRES_USER
        echo $POSTGRES_PASSWORD
        npm run migrate:up
        npm run generate:types
        npm tests
      env:
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432
        POSTGRES_DB: test
        POSTGRES_USER: test123
        POSTGRES_PASSWORD: helloWorld
        REDIS_HOST: localhost
        REDIS_PORT: 6379
        DATABASE_URL: postgres://test123:helloWorld@localhost/test
